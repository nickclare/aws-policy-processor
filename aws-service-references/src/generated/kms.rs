// NOTE: This code is automatically generated - do not update it manually

#[derive(Debug, Clone, Copy, std :: cmp :: PartialEq, std :: cmp :: Eq, std :: hash :: Hash)]
pub enum KmsActions {
    CancelKeyDeletion,
    ConnectCustomKeyStore,
    CreateAlias,
    CreateCustomKeyStore,
    CreateGrant,
    CreateKey,
    Decrypt,
    DeleteAlias,
    DeleteCustomKeyStore,
    DeleteImportedKeyMaterial,
    DeriveSharedSecret,
    DescribeCustomKeyStores,
    DescribeKey,
    DisableKey,
    DisableKeyRotation,
    DisconnectCustomKeyStore,
    EnableKey,
    EnableKeyRotation,
    Encrypt,
    GenerateDataKey,
    GenerateDataKeyPair,
    GenerateDataKeyPairWithoutPlaintext,
    GenerateDataKeyWithoutPlaintext,
    GenerateMac,
    GenerateRandom,
    GetKeyPolicy,
    GetKeyRotationStatus,
    GetParametersForImport,
    GetPublicKey,
    ImportKeyMaterial,
    ListAliases,
    ListGrants,
    ListKeyPolicies,
    ListKeyRotations,
    ListKeys,
    ListResourceTags,
    ListRetirableGrants,
    PutKeyPolicy,
    ReEncryptFrom,
    ReEncryptTo,
    ReplicateKey,
    RetireGrant,
    RevokeGrant,
    RotateKeyOnDemand,
    ScheduleKeyDeletion,
    Sign,
    SynchronizeMultiRegionKey,
    TagResource,
    UntagResource,
    UpdateAlias,
    UpdateCustomKeyStore,
    UpdateKeyDescription,
    UpdatePrimaryRegion,
    Verify,
    VerifyMac,
}
impl std::fmt::Display for KmsActions {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        match self {
            KmsActions::CancelKeyDeletion => write!(f, "kms:CancelKeyDeletion"),
            KmsActions::ConnectCustomKeyStore => write!(f, "kms:ConnectCustomKeyStore"),
            KmsActions::CreateAlias => write!(f, "kms:CreateAlias"),
            KmsActions::CreateCustomKeyStore => write!(f, "kms:CreateCustomKeyStore"),
            KmsActions::CreateGrant => write!(f, "kms:CreateGrant"),
            KmsActions::CreateKey => write!(f, "kms:CreateKey"),
            KmsActions::Decrypt => write!(f, "kms:Decrypt"),
            KmsActions::DeleteAlias => write!(f, "kms:DeleteAlias"),
            KmsActions::DeleteCustomKeyStore => write!(f, "kms:DeleteCustomKeyStore"),
            KmsActions::DeleteImportedKeyMaterial => write!(f, "kms:DeleteImportedKeyMaterial"),
            KmsActions::DeriveSharedSecret => write!(f, "kms:DeriveSharedSecret"),
            KmsActions::DescribeCustomKeyStores => write!(f, "kms:DescribeCustomKeyStores"),
            KmsActions::DescribeKey => write!(f, "kms:DescribeKey"),
            KmsActions::DisableKey => write!(f, "kms:DisableKey"),
            KmsActions::DisableKeyRotation => write!(f, "kms:DisableKeyRotation"),
            KmsActions::DisconnectCustomKeyStore => write!(f, "kms:DisconnectCustomKeyStore"),
            KmsActions::EnableKey => write!(f, "kms:EnableKey"),
            KmsActions::EnableKeyRotation => write!(f, "kms:EnableKeyRotation"),
            KmsActions::Encrypt => write!(f, "kms:Encrypt"),
            KmsActions::GenerateDataKey => write!(f, "kms:GenerateDataKey"),
            KmsActions::GenerateDataKeyPair => write!(f, "kms:GenerateDataKeyPair"),
            KmsActions::GenerateDataKeyPairWithoutPlaintext => {
                write!(f, "kms:GenerateDataKeyPairWithoutPlaintext")
            }
            KmsActions::GenerateDataKeyWithoutPlaintext => {
                write!(f, "kms:GenerateDataKeyWithoutPlaintext")
            }
            KmsActions::GenerateMac => write!(f, "kms:GenerateMac"),
            KmsActions::GenerateRandom => write!(f, "kms:GenerateRandom"),
            KmsActions::GetKeyPolicy => write!(f, "kms:GetKeyPolicy"),
            KmsActions::GetKeyRotationStatus => write!(f, "kms:GetKeyRotationStatus"),
            KmsActions::GetParametersForImport => write!(f, "kms:GetParametersForImport"),
            KmsActions::GetPublicKey => write!(f, "kms:GetPublicKey"),
            KmsActions::ImportKeyMaterial => write!(f, "kms:ImportKeyMaterial"),
            KmsActions::ListAliases => write!(f, "kms:ListAliases"),
            KmsActions::ListGrants => write!(f, "kms:ListGrants"),
            KmsActions::ListKeyPolicies => write!(f, "kms:ListKeyPolicies"),
            KmsActions::ListKeyRotations => write!(f, "kms:ListKeyRotations"),
            KmsActions::ListKeys => write!(f, "kms:ListKeys"),
            KmsActions::ListResourceTags => write!(f, "kms:ListResourceTags"),
            KmsActions::ListRetirableGrants => write!(f, "kms:ListRetirableGrants"),
            KmsActions::PutKeyPolicy => write!(f, "kms:PutKeyPolicy"),
            KmsActions::ReEncryptFrom => write!(f, "kms:ReEncryptFrom"),
            KmsActions::ReEncryptTo => write!(f, "kms:ReEncryptTo"),
            KmsActions::ReplicateKey => write!(f, "kms:ReplicateKey"),
            KmsActions::RetireGrant => write!(f, "kms:RetireGrant"),
            KmsActions::RevokeGrant => write!(f, "kms:RevokeGrant"),
            KmsActions::RotateKeyOnDemand => write!(f, "kms:RotateKeyOnDemand"),
            KmsActions::ScheduleKeyDeletion => write!(f, "kms:ScheduleKeyDeletion"),
            KmsActions::Sign => write!(f, "kms:Sign"),
            KmsActions::SynchronizeMultiRegionKey => write!(f, "kms:SynchronizeMultiRegionKey"),
            KmsActions::TagResource => write!(f, "kms:TagResource"),
            KmsActions::UntagResource => write!(f, "kms:UntagResource"),
            KmsActions::UpdateAlias => write!(f, "kms:UpdateAlias"),
            KmsActions::UpdateCustomKeyStore => write!(f, "kms:UpdateCustomKeyStore"),
            KmsActions::UpdateKeyDescription => write!(f, "kms:UpdateKeyDescription"),
            KmsActions::UpdatePrimaryRegion => write!(f, "kms:UpdatePrimaryRegion"),
            KmsActions::Verify => write!(f, "kms:Verify"),
            KmsActions::VerifyMac => write!(f, "kms:VerifyMac"),
        }
    }
}

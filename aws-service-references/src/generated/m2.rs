// NOTE: This code is automatically generated - do not update it manually

#[derive(Debug, Clone, Copy, std :: cmp :: PartialEq, std :: cmp :: Eq, std :: hash :: Hash)]
pub enum M2Actions {
    CancelBatchJobExecution,
    CreateApplication,
    CreateDataSetExportTask,
    CreateDataSetImportTask,
    CreateDeployment,
    CreateEnvironment,
    DeleteApplication,
    DeleteApplicationFromEnvironment,
    DeleteEnvironment,
    GetApplication,
    GetApplicationVersion,
    GetBatchJobExecution,
    GetDataSetDetails,
    GetDataSetExportTask,
    GetDataSetImportTask,
    GetDeployment,
    GetEnvironment,
    GetSignedBluinsightsUrl,
    ListApplicationVersions,
    ListApplications,
    ListBatchJobDefinitions,
    ListBatchJobExecutions,
    ListBatchJobRestartPoints,
    ListDataSetExportHistory,
    ListDataSetImportHistory,
    ListDataSets,
    ListDeployments,
    ListEngineVersions,
    ListEnvironments,
    ListTagsForResource,
    StartApplication,
    StartBatchJob,
    StopApplication,
    TagResource,
    UntagResource,
    UpdateApplication,
    UpdateEnvironment,
}
impl std::fmt::Display for M2Actions {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        match self {
            M2Actions::CancelBatchJobExecution => write!(f, "m2:CancelBatchJobExecution"),
            M2Actions::CreateApplication => write!(f, "m2:CreateApplication"),
            M2Actions::CreateDataSetExportTask => write!(f, "m2:CreateDataSetExportTask"),
            M2Actions::CreateDataSetImportTask => write!(f, "m2:CreateDataSetImportTask"),
            M2Actions::CreateDeployment => write!(f, "m2:CreateDeployment"),
            M2Actions::CreateEnvironment => write!(f, "m2:CreateEnvironment"),
            M2Actions::DeleteApplication => write!(f, "m2:DeleteApplication"),
            M2Actions::DeleteApplicationFromEnvironment => {
                write!(f, "m2:DeleteApplicationFromEnvironment")
            }
            M2Actions::DeleteEnvironment => write!(f, "m2:DeleteEnvironment"),
            M2Actions::GetApplication => write!(f, "m2:GetApplication"),
            M2Actions::GetApplicationVersion => write!(f, "m2:GetApplicationVersion"),
            M2Actions::GetBatchJobExecution => write!(f, "m2:GetBatchJobExecution"),
            M2Actions::GetDataSetDetails => write!(f, "m2:GetDataSetDetails"),
            M2Actions::GetDataSetExportTask => write!(f, "m2:GetDataSetExportTask"),
            M2Actions::GetDataSetImportTask => write!(f, "m2:GetDataSetImportTask"),
            M2Actions::GetDeployment => write!(f, "m2:GetDeployment"),
            M2Actions::GetEnvironment => write!(f, "m2:GetEnvironment"),
            M2Actions::GetSignedBluinsightsUrl => write!(f, "m2:GetSignedBluinsightsUrl"),
            M2Actions::ListApplicationVersions => write!(f, "m2:ListApplicationVersions"),
            M2Actions::ListApplications => write!(f, "m2:ListApplications"),
            M2Actions::ListBatchJobDefinitions => write!(f, "m2:ListBatchJobDefinitions"),
            M2Actions::ListBatchJobExecutions => write!(f, "m2:ListBatchJobExecutions"),
            M2Actions::ListBatchJobRestartPoints => write!(f, "m2:ListBatchJobRestartPoints"),
            M2Actions::ListDataSetExportHistory => write!(f, "m2:ListDataSetExportHistory"),
            M2Actions::ListDataSetImportHistory => write!(f, "m2:ListDataSetImportHistory"),
            M2Actions::ListDataSets => write!(f, "m2:ListDataSets"),
            M2Actions::ListDeployments => write!(f, "m2:ListDeployments"),
            M2Actions::ListEngineVersions => write!(f, "m2:ListEngineVersions"),
            M2Actions::ListEnvironments => write!(f, "m2:ListEnvironments"),
            M2Actions::ListTagsForResource => write!(f, "m2:ListTagsForResource"),
            M2Actions::StartApplication => write!(f, "m2:StartApplication"),
            M2Actions::StartBatchJob => write!(f, "m2:StartBatchJob"),
            M2Actions::StopApplication => write!(f, "m2:StopApplication"),
            M2Actions::TagResource => write!(f, "m2:TagResource"),
            M2Actions::UntagResource => write!(f, "m2:UntagResource"),
            M2Actions::UpdateApplication => write!(f, "m2:UpdateApplication"),
            M2Actions::UpdateEnvironment => write!(f, "m2:UpdateEnvironment"),
        }
    }
}

// NOTE: This code is automatically generated - do not update it manually

#[derive(Debug, Clone, Copy, std :: cmp :: PartialEq, std :: cmp :: Eq, std :: hash :: Hash)]
pub enum LogsActions {
    AssociateKmsKey,
    CancelExportTask,
    CreateDelivery,
    CreateExportTask,
    CreateLogAnomalyDetector,
    CreateLogDelivery,
    CreateLogGroup,
    CreateLogStream,
    DeleteAccountPolicy,
    DeleteDataProtectionPolicy,
    DeleteDelivery,
    DeleteDeliveryDestination,
    DeleteDeliveryDestinationPolicy,
    DeleteDeliverySource,
    DeleteDestination,
    DeleteIndexPolicy,
    DeleteIntegration,
    DeleteLogAnomalyDetector,
    DeleteLogDelivery,
    DeleteLogGroup,
    DeleteLogStream,
    DeleteMetricFilter,
    DeleteQueryDefinition,
    DeleteResourcePolicy,
    DeleteRetentionPolicy,
    DeleteSubscriptionFilter,
    DeleteTransformer,
    DescribeAccountPolicies,
    DescribeConfigurationTemplates,
    DescribeDeliveries,
    DescribeDeliveryDestinations,
    DescribeDeliverySources,
    DescribeDestinations,
    DescribeExportTasks,
    DescribeFieldIndexes,
    DescribeIndexPolicies,
    DescribeLogGroups,
    DescribeLogStreams,
    DescribeMetricFilters,
    DescribeQueries,
    DescribeQueryDefinitions,
    DescribeResourcePolicies,
    DescribeSubscriptionFilters,
    DisassociateKmsKey,
    FilterLogEvents,
    GetDataProtectionPolicy,
    GetDelivery,
    GetDeliveryDestination,
    GetDeliveryDestinationPolicy,
    GetDeliverySource,
    GetIntegration,
    GetLogAnomalyDetector,
    GetLogDelivery,
    GetLogEvents,
    GetLogGroupFields,
    GetLogRecord,
    GetQueryResults,
    GetTransformer,
    Link,
    ListAnomalies,
    ListEntitiesForLogGroup,
    ListIntegrations,
    ListLogAnomalyDetectors,
    ListLogDeliveries,
    ListLogGroups,
    ListLogGroupsForEntity,
    ListLogGroupsForQuery,
    ListTagsForResource,
    ListTagsLogGroup,
    PutAccountPolicy,
    PutDataProtectionPolicy,
    PutDeliveryDestination,
    PutDeliveryDestinationPolicy,
    PutDeliverySource,
    PutDestination,
    PutDestinationPolicy,
    PutIndexPolicy,
    PutIntegration,
    PutLogEvents,
    PutMetricFilter,
    PutQueryDefinition,
    PutResourcePolicy,
    PutRetentionPolicy,
    PutSubscriptionFilter,
    PutTransformer,
    StartLiveTail,
    StartQuery,
    StopLiveTail,
    StopQuery,
    TagLogGroup,
    TagResource,
    TestMetricFilter,
    TestTransformer,
    Unmask,
    UntagLogGroup,
    UntagResource,
    UpdateAnomaly,
    UpdateDeliveryConfiguration,
    UpdateLogAnomalyDetector,
    UpdateLogDelivery,
}
impl std::fmt::Display for LogsActions {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        match self {
            LogsActions::AssociateKmsKey => write!(f, "logs:AssociateKmsKey"),
            LogsActions::CancelExportTask => write!(f, "logs:CancelExportTask"),
            LogsActions::CreateDelivery => write!(f, "logs:CreateDelivery"),
            LogsActions::CreateExportTask => write!(f, "logs:CreateExportTask"),
            LogsActions::CreateLogAnomalyDetector => write!(f, "logs:CreateLogAnomalyDetector"),
            LogsActions::CreateLogDelivery => write!(f, "logs:CreateLogDelivery"),
            LogsActions::CreateLogGroup => write!(f, "logs:CreateLogGroup"),
            LogsActions::CreateLogStream => write!(f, "logs:CreateLogStream"),
            LogsActions::DeleteAccountPolicy => write!(f, "logs:DeleteAccountPolicy"),
            LogsActions::DeleteDataProtectionPolicy => write!(f, "logs:DeleteDataProtectionPolicy"),
            LogsActions::DeleteDelivery => write!(f, "logs:DeleteDelivery"),
            LogsActions::DeleteDeliveryDestination => write!(f, "logs:DeleteDeliveryDestination"),
            LogsActions::DeleteDeliveryDestinationPolicy => {
                write!(f, "logs:DeleteDeliveryDestinationPolicy")
            }
            LogsActions::DeleteDeliverySource => write!(f, "logs:DeleteDeliverySource"),
            LogsActions::DeleteDestination => write!(f, "logs:DeleteDestination"),
            LogsActions::DeleteIndexPolicy => write!(f, "logs:DeleteIndexPolicy"),
            LogsActions::DeleteIntegration => write!(f, "logs:DeleteIntegration"),
            LogsActions::DeleteLogAnomalyDetector => write!(f, "logs:DeleteLogAnomalyDetector"),
            LogsActions::DeleteLogDelivery => write!(f, "logs:DeleteLogDelivery"),
            LogsActions::DeleteLogGroup => write!(f, "logs:DeleteLogGroup"),
            LogsActions::DeleteLogStream => write!(f, "logs:DeleteLogStream"),
            LogsActions::DeleteMetricFilter => write!(f, "logs:DeleteMetricFilter"),
            LogsActions::DeleteQueryDefinition => write!(f, "logs:DeleteQueryDefinition"),
            LogsActions::DeleteResourcePolicy => write!(f, "logs:DeleteResourcePolicy"),
            LogsActions::DeleteRetentionPolicy => write!(f, "logs:DeleteRetentionPolicy"),
            LogsActions::DeleteSubscriptionFilter => write!(f, "logs:DeleteSubscriptionFilter"),
            LogsActions::DeleteTransformer => write!(f, "logs:DeleteTransformer"),
            LogsActions::DescribeAccountPolicies => write!(f, "logs:DescribeAccountPolicies"),
            LogsActions::DescribeConfigurationTemplates => {
                write!(f, "logs:DescribeConfigurationTemplates")
            }
            LogsActions::DescribeDeliveries => write!(f, "logs:DescribeDeliveries"),
            LogsActions::DescribeDeliveryDestinations => {
                write!(f, "logs:DescribeDeliveryDestinations")
            }
            LogsActions::DescribeDeliverySources => write!(f, "logs:DescribeDeliverySources"),
            LogsActions::DescribeDestinations => write!(f, "logs:DescribeDestinations"),
            LogsActions::DescribeExportTasks => write!(f, "logs:DescribeExportTasks"),
            LogsActions::DescribeFieldIndexes => write!(f, "logs:DescribeFieldIndexes"),
            LogsActions::DescribeIndexPolicies => write!(f, "logs:DescribeIndexPolicies"),
            LogsActions::DescribeLogGroups => write!(f, "logs:DescribeLogGroups"),
            LogsActions::DescribeLogStreams => write!(f, "logs:DescribeLogStreams"),
            LogsActions::DescribeMetricFilters => write!(f, "logs:DescribeMetricFilters"),
            LogsActions::DescribeQueries => write!(f, "logs:DescribeQueries"),
            LogsActions::DescribeQueryDefinitions => write!(f, "logs:DescribeQueryDefinitions"),
            LogsActions::DescribeResourcePolicies => write!(f, "logs:DescribeResourcePolicies"),
            LogsActions::DescribeSubscriptionFilters => {
                write!(f, "logs:DescribeSubscriptionFilters")
            }
            LogsActions::DisassociateKmsKey => write!(f, "logs:DisassociateKmsKey"),
            LogsActions::FilterLogEvents => write!(f, "logs:FilterLogEvents"),
            LogsActions::GetDataProtectionPolicy => write!(f, "logs:GetDataProtectionPolicy"),
            LogsActions::GetDelivery => write!(f, "logs:GetDelivery"),
            LogsActions::GetDeliveryDestination => write!(f, "logs:GetDeliveryDestination"),
            LogsActions::GetDeliveryDestinationPolicy => {
                write!(f, "logs:GetDeliveryDestinationPolicy")
            }
            LogsActions::GetDeliverySource => write!(f, "logs:GetDeliverySource"),
            LogsActions::GetIntegration => write!(f, "logs:GetIntegration"),
            LogsActions::GetLogAnomalyDetector => write!(f, "logs:GetLogAnomalyDetector"),
            LogsActions::GetLogDelivery => write!(f, "logs:GetLogDelivery"),
            LogsActions::GetLogEvents => write!(f, "logs:GetLogEvents"),
            LogsActions::GetLogGroupFields => write!(f, "logs:GetLogGroupFields"),
            LogsActions::GetLogRecord => write!(f, "logs:GetLogRecord"),
            LogsActions::GetQueryResults => write!(f, "logs:GetQueryResults"),
            LogsActions::GetTransformer => write!(f, "logs:GetTransformer"),
            LogsActions::Link => write!(f, "logs:Link"),
            LogsActions::ListAnomalies => write!(f, "logs:ListAnomalies"),
            LogsActions::ListEntitiesForLogGroup => write!(f, "logs:ListEntitiesForLogGroup"),
            LogsActions::ListIntegrations => write!(f, "logs:ListIntegrations"),
            LogsActions::ListLogAnomalyDetectors => write!(f, "logs:ListLogAnomalyDetectors"),
            LogsActions::ListLogDeliveries => write!(f, "logs:ListLogDeliveries"),
            LogsActions::ListLogGroups => write!(f, "logs:ListLogGroups"),
            LogsActions::ListLogGroupsForEntity => write!(f, "logs:ListLogGroupsForEntity"),
            LogsActions::ListLogGroupsForQuery => write!(f, "logs:ListLogGroupsForQuery"),
            LogsActions::ListTagsForResource => write!(f, "logs:ListTagsForResource"),
            LogsActions::ListTagsLogGroup => write!(f, "logs:ListTagsLogGroup"),
            LogsActions::PutAccountPolicy => write!(f, "logs:PutAccountPolicy"),
            LogsActions::PutDataProtectionPolicy => write!(f, "logs:PutDataProtectionPolicy"),
            LogsActions::PutDeliveryDestination => write!(f, "logs:PutDeliveryDestination"),
            LogsActions::PutDeliveryDestinationPolicy => {
                write!(f, "logs:PutDeliveryDestinationPolicy")
            }
            LogsActions::PutDeliverySource => write!(f, "logs:PutDeliverySource"),
            LogsActions::PutDestination => write!(f, "logs:PutDestination"),
            LogsActions::PutDestinationPolicy => write!(f, "logs:PutDestinationPolicy"),
            LogsActions::PutIndexPolicy => write!(f, "logs:PutIndexPolicy"),
            LogsActions::PutIntegration => write!(f, "logs:PutIntegration"),
            LogsActions::PutLogEvents => write!(f, "logs:PutLogEvents"),
            LogsActions::PutMetricFilter => write!(f, "logs:PutMetricFilter"),
            LogsActions::PutQueryDefinition => write!(f, "logs:PutQueryDefinition"),
            LogsActions::PutResourcePolicy => write!(f, "logs:PutResourcePolicy"),
            LogsActions::PutRetentionPolicy => write!(f, "logs:PutRetentionPolicy"),
            LogsActions::PutSubscriptionFilter => write!(f, "logs:PutSubscriptionFilter"),
            LogsActions::PutTransformer => write!(f, "logs:PutTransformer"),
            LogsActions::StartLiveTail => write!(f, "logs:StartLiveTail"),
            LogsActions::StartQuery => write!(f, "logs:StartQuery"),
            LogsActions::StopLiveTail => write!(f, "logs:StopLiveTail"),
            LogsActions::StopQuery => write!(f, "logs:StopQuery"),
            LogsActions::TagLogGroup => write!(f, "logs:TagLogGroup"),
            LogsActions::TagResource => write!(f, "logs:TagResource"),
            LogsActions::TestMetricFilter => write!(f, "logs:TestMetricFilter"),
            LogsActions::TestTransformer => write!(f, "logs:TestTransformer"),
            LogsActions::Unmask => write!(f, "logs:Unmask"),
            LogsActions::UntagLogGroup => write!(f, "logs:UntagLogGroup"),
            LogsActions::UntagResource => write!(f, "logs:UntagResource"),
            LogsActions::UpdateAnomaly => write!(f, "logs:UpdateAnomaly"),
            LogsActions::UpdateDeliveryConfiguration => {
                write!(f, "logs:UpdateDeliveryConfiguration")
            }
            LogsActions::UpdateLogAnomalyDetector => write!(f, "logs:UpdateLogAnomalyDetector"),
            LogsActions::UpdateLogDelivery => write!(f, "logs:UpdateLogDelivery"),
        }
    }
}

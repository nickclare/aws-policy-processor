// NOTE: This code is automatically generated - do not update it manually

#[derive(Debug, Clone, Copy, std :: cmp :: PartialEq, std :: cmp :: Eq, std :: hash :: Hash)]
pub enum CasesActions {
    BatchGetCaseRule,
    BatchGetField,
    BatchPutFieldOptions,
    CreateCase,
    CreateCaseRule,
    CreateDomain,
    CreateField,
    CreateLayout,
    CreateRelatedItem,
    CreateTemplate,
    DeleteCase,
    DeleteCaseRule,
    DeleteDomain,
    DeleteField,
    DeleteLayout,
    DeleteRelatedItem,
    DeleteTemplate,
    GetCase,
    GetCaseAuditEvents,
    GetCaseEventConfiguration,
    GetDomain,
    GetLayout,
    GetTemplate,
    ListCaseRules,
    ListCasesForContact,
    ListDomains,
    ListFieldOptions,
    ListFields,
    ListLayouts,
    ListTagsForResource,
    ListTemplates,
    PutCaseEventConfiguration,
    SearchCases,
    SearchRelatedItems,
    TagResource,
    UntagResource,
    UpdateCase,
    UpdateCaseRule,
    UpdateField,
    UpdateLayout,
    UpdateTemplate,
}
impl std::fmt::Display for CasesActions {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        match self {
            CasesActions::BatchGetCaseRule => write!(f, "cases:BatchGetCaseRule"),
            CasesActions::BatchGetField => write!(f, "cases:BatchGetField"),
            CasesActions::BatchPutFieldOptions => write!(f, "cases:BatchPutFieldOptions"),
            CasesActions::CreateCase => write!(f, "cases:CreateCase"),
            CasesActions::CreateCaseRule => write!(f, "cases:CreateCaseRule"),
            CasesActions::CreateDomain => write!(f, "cases:CreateDomain"),
            CasesActions::CreateField => write!(f, "cases:CreateField"),
            CasesActions::CreateLayout => write!(f, "cases:CreateLayout"),
            CasesActions::CreateRelatedItem => write!(f, "cases:CreateRelatedItem"),
            CasesActions::CreateTemplate => write!(f, "cases:CreateTemplate"),
            CasesActions::DeleteCase => write!(f, "cases:DeleteCase"),
            CasesActions::DeleteCaseRule => write!(f, "cases:DeleteCaseRule"),
            CasesActions::DeleteDomain => write!(f, "cases:DeleteDomain"),
            CasesActions::DeleteField => write!(f, "cases:DeleteField"),
            CasesActions::DeleteLayout => write!(f, "cases:DeleteLayout"),
            CasesActions::DeleteRelatedItem => write!(f, "cases:DeleteRelatedItem"),
            CasesActions::DeleteTemplate => write!(f, "cases:DeleteTemplate"),
            CasesActions::GetCase => write!(f, "cases:GetCase"),
            CasesActions::GetCaseAuditEvents => write!(f, "cases:GetCaseAuditEvents"),
            CasesActions::GetCaseEventConfiguration => write!(f, "cases:GetCaseEventConfiguration"),
            CasesActions::GetDomain => write!(f, "cases:GetDomain"),
            CasesActions::GetLayout => write!(f, "cases:GetLayout"),
            CasesActions::GetTemplate => write!(f, "cases:GetTemplate"),
            CasesActions::ListCaseRules => write!(f, "cases:ListCaseRules"),
            CasesActions::ListCasesForContact => write!(f, "cases:ListCasesForContact"),
            CasesActions::ListDomains => write!(f, "cases:ListDomains"),
            CasesActions::ListFieldOptions => write!(f, "cases:ListFieldOptions"),
            CasesActions::ListFields => write!(f, "cases:ListFields"),
            CasesActions::ListLayouts => write!(f, "cases:ListLayouts"),
            CasesActions::ListTagsForResource => write!(f, "cases:ListTagsForResource"),
            CasesActions::ListTemplates => write!(f, "cases:ListTemplates"),
            CasesActions::PutCaseEventConfiguration => write!(f, "cases:PutCaseEventConfiguration"),
            CasesActions::SearchCases => write!(f, "cases:SearchCases"),
            CasesActions::SearchRelatedItems => write!(f, "cases:SearchRelatedItems"),
            CasesActions::TagResource => write!(f, "cases:TagResource"),
            CasesActions::UntagResource => write!(f, "cases:UntagResource"),
            CasesActions::UpdateCase => write!(f, "cases:UpdateCase"),
            CasesActions::UpdateCaseRule => write!(f, "cases:UpdateCaseRule"),
            CasesActions::UpdateField => write!(f, "cases:UpdateField"),
            CasesActions::UpdateLayout => write!(f, "cases:UpdateLayout"),
            CasesActions::UpdateTemplate => write!(f, "cases:UpdateTemplate"),
        }
    }
}
